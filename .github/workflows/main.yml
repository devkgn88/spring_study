name: Deploy to EC2 using Docker
on: 
 push:
  branches:
   - master
  paths:
   - 'todo/**'
jobs:
 deploy:
  runs-on: ubuntu-latest

  steps:
   # 저장소 클론
   - name: Checkout Repository
     uses: actions/checkout@v3
   # Java 17 설정
   - name: Set up JDK 17
     uses: actions/setup-java@v3
     with:
      distribution: 'temurin'
      java-version: '17'
   # Secrets 복사
   - name: Copy application-secret.properties
     if: contains(github.ref, 'master')
     run: |
      echo "ls -a . & pwd"
      pwd
      ls -a .
      cd ./todo/src/main/resources
      ls -a .
      touch ./application-secret.properties
      pwd
      ls -a .
      echo "copy properties"
      echo ${{ secrets.APP_SECRET_PROPERTIES }} >> application-secret.properties
   # Gradle build 실행
   - name: Build with Gradle
     run: |
      cd /home/ubuntu/app/todo
      chmod +x ./gradlew
      ./gradlew clean build -x test
   # 빌드된 jar파일 확인   
   - name: Check Jar file
     run: |
      ls -lh todo/build/libs/
   # EC2 서버에 SSH로 접속하여 배포
   - name: Deploy to EC2
     uses: appleboy/ssh-action@master
     with:
      host: ${{ secrets.EC2_HOST }}
      username: ubuntu
      key: ${{ secrets.EC2_SSH_KEY }}
      script: |
       # 작업 디렉토리 이동
       cd /home/ubuntu/app
       # todo 프로젝트 디렉토리로 이동
       cd todo
       # Docker 컨테이너 중지 및 삭제
       sudo docker stop my-app || true
       sudo docker rm my-app || true
       # Docker 이미지 빌드 및 실행
       sudo docker build -t my-app .
       sudo docker run -d --name my-app -p 8080:8080 my-app
